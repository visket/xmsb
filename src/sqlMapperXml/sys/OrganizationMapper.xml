<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cody.mapper.sys.OrganizationMapper">
    <resultMap id="BaseResultMap" type="com.cody.entity.sys.Organization">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="pids" property="pids" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="BIGINT"/>
        <result column="seq" property="seq" jdbcType="TINYINT"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="areaName" property="areaName" jdbcType="VARCHAR" />
        <result column="unitTypeName" property="unitTypeName" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="roleid" property="roleid" jdbcType="BIGINT" />
    </resultMap>
    
    
    <resultMap id="BaseResulVotMap" type="com.cody.vo.sys.OrganizationVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="icon" property="icon" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="area_id" property="areaId" jdbcType="VARCHAR"/>
        <result column="pids" property="pids" jdbcType="VARCHAR"/>
        <result column="pid" property="pid" jdbcType="BIGINT"/>
        <result column="seq" property="seq" jdbcType="TINYINT"/>
        <result column="createdate" property="createdate" jdbcType="TIMESTAMP"/>
        <result column="areaName" property="areaName" jdbcType="VARCHAR" />
        <result column="unitTypeName" property="unitTypeName" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="roleid" property="roleid" jdbcType="BIGINT" />
        <result column="olds" property="olds" jdbcType="BIGINT" />
        <result column="linkman" property="linkman" jdbcType="VARCHAR" />
        <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    </resultMap>
    
    <sql id="Base_Column_List">
    id, name, address, code, icon, pid, type, area_id, pids, seq, createDate,status,roleid
  </sql>

    <select id="findOrganizationAllByPidNull" resultMap="BaseResultMap">
        select distinct
        o.id, o.name, o.address, o.code, o.icon, o.pid, o.type,o.area_id, o.pids, o.seq, o.createDate,o.roleid
        from organization o left join user u on u.organization_id = o.id 
        <where>
        	<choose>
        		<when test="dataFilterSql != null and dataFilterSql != ''">
       				${dataFilterSql} and
       			</when>
        	</choose>
        	o.status>-1
        </where>
        order by o.seq
    </select>

    <select id="findOrganizationAll" resultMap="BaseResulVotMap">
        select
        DISTINCT o.id, o.name, o.address, o.code, o.icon, o.pid, o.type,o.area_id, o.pids, o.seq, o.createDate,o.roleid,sa.name as areaName,im.itemvalue as unitTypeName ,
        tsu.unit_linkman as linkman ,tsu.telephone as telephone
				from organization o 
				left join user u on u.organization_id = o.id 
				left join sysarea sa on sa.id = o.area_id 
				left join item im on im.id = o.type
				LEFT JOIN t_sys_unit tsu on tsu.organization_id =o.id
        <where>
        	<choose>
        		<when test="dataFilterSql != null and dataFilterSql != ''">
       				${dataFilterSql} and
       			</when>
        	</choose>
        	o.status>-1
        </where>
         order by o.seq
    </select>

    <select id="findOrganizationById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from organization where id = #{id}
    </select>

    <delete id="deleteOrganizationById" parameterType="java.lang.Long">
    delete from organization
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.cody.entity.sys.Organization">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into organization (name, address, code,
        icon, pid, seq, createdate, pids, type,area_id,status
        )
        values (#{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
        #{icon,jdbcType=VARCHAR}, #{pid,jdbcType=BIGINT}, #{seq,jdbcType=TINYINT}, now(), #{pids}, #{type},#{areaId},#{status}
        )
    </insert>

    <update id="updateOrganization" parameterType="com.cody.entity.sys.Organization">
        update organization
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=BIGINT},
            </if>
            <if test="pids != null">
            	pids = #{pids},
            </if>
            <if test="type != null">
            	type = #{type},
            </if>
            <if test="areaId != null">
            	area_id = #{areaId},
            </if>
            <if test="seq != null">
                seq = #{seq,jdbcType=TINYINT},
            </if>
            <if test="createdate != null">
                createdate = now(),
            </if>
                roleid = #{roleid}
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

	<update id="updateParentIds">
		UPDATE organization SET 
			pid = #{pid}, 
			pids = #{pids}
		WHERE id = #{id}
	</update>
	
	<select id="findByParentIdsLike" resultMap="BaseResultMap">
		SELECT
			a.id,
			a.pid,
			a.pids
		FROM organization a
		WHERE a.pids LIKE #{pids}
		ORDER BY a.seq
	</select>
	
	<delete id="deleteOrganizationByPid">
		delete from organization where id = #{id} OR pids LIKE CONCAT('%,', #{id}, ',%')
	</delete>
	
	<select id="findOrganizationProvinceAllByPid" resultMap="BaseResultMap" parameterType="PageInfo">
        select distinct
        <include refid="Base_Column_List"/>
        from organization
        <where>
			<foreach collection="condition" item="item" index="key" separator="and">
				${key}  #{item}
       		</foreach>
       		and status > -1
		</where>
    </select> 
	

	<select id="findOrganizationAllByPid" resultMap="BaseResultMap">
        select distinct
        <include refid="Base_Column_List"/>
        from organization
        where pid = #{pid} and status>-1 ORDER BY  pid,seq desc
    </select> 

   <!-- 物理删除 -->
   <!-- 
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from organization
    where id = #{id,jdbcType=BIGINT}
  </delete> 
  -->
  
  <!-- 逻辑删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    UPDATE organization SET
      status = -1
    where id = #{id,jdbcType=BIGINT}
  </delete> 
	
	
	
	<update id="updateToRoleId" parameterType="com.cody.vo.sys.OrganizationVo">
		UPDATE organization SET 
			roleid =#{roleid} 
		<where>
			<foreach collection="oids" item="item" open="(" separator=" or "
				close=")">
				id= #{item}
			</foreach>
		</where>
	</update>
  	
  	
  	<select id="findByRoleId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select  <include refid="Base_Column_List"/>
        from organization
        <where>
        	roleid=#{roleid}
        </where>
    </select> 
	
</mapper>